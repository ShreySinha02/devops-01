name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Specify your Node.js version

      # - name: List directory for debugging
      #   run: ls

      - name: Install Dependencies
        working-directory: ./frontend_01
        run: |
          sudo apt update
          npm install

      - name: Run Tests
        working-directory: ./frontend_01
        run: npm test
        env:
          CI: true # Ensures tests are run in CI mode to avoid interactive prompts

  build:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: List directory for debugging
        run: ls -R

      - name: Build Docker images
        run: docker-compose build

      # - name: Push Docker images to GitHub Packages (Optional)
      #   run: |
      #     echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      #     docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: List directory for debugging
        run: ls -R

      - name: Deploy to AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker-compose down
            git pull origin main
            docker-compose up -d --build
          EOF
